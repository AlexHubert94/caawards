---
import ArgFlag from "@/icons/ArgFlag.astro";
import Close from "@/icons/Close.astro";
import ListUp from "@/icons/ListUp.astro";
import LogoCaawards from "@/icons/LogoCaawards.astro";
import UpArrow from "@/icons/UpArrow.astro";

const { pathname } = Astro.url;
const normalizedPathName = pathname.length > 1 && pathname.endsWith("/") ? pathname.slice(0, -1) : pathname;

const pages = [
    { name: "Acerca de", href: "/about" },
    { name: "Picantes", href: "/spicy" },
    { name: "Ternas 2023", href: "/categories" },
    { name: "Sponsors 2023", href: "/sponsors" }
].map((page) => ({
    ...page,
    active: normalizedPathName === page.href,
}));
---

<nav 
    class="flex flex-col items-center relative w-full md:flex-row md:justify-between md:h-auto md:p-6 xl:p-8 z-30" 
    id="nav"
    aria-label="Main navigation"
>
    <div class="flex flex-col md:flex-row">
            <div class="flex pt-6 md:pt-0">
                <a href="/" aria-label="Home">
                    <LogoCaawards alt="logo-caawards" class:list={'w-[110px] h-auto mr-8'} />
                </a>
                <button id="menuButton" class="md:hidden w-11 cursor-pointer" aria-label="Open menu">
                    <ListUp alt="list-icon" />
                </button>
                <button id="closeButton" class="md:hidden hidden w-12 cursor-pointer" aria-label="Close menu">
                    <Close alt="close-icon" />
                </button>
            </div>
    
            <ul
                id="menuMobileContent"
                class="hidden md:flex flex-col gap-10 items-center font-Inter text-2xl font-medium pt-6 md:flex-row md:pt-0 md:gap-8 lg:gap-14 md:text-lg md:font-extralight lg:text-lg xl:text-xl"
            >
                {pages.map(({ name, href, active }) => (
                    <li class="hover:scale-110 transition-transform duration-200">
                        <a
                            href={href}
                            class:list={[{
                                "text-white": !active,
                                "text-primary border-b-[1px]": active
                            }]}
                            aria-current={active ? "page" : undefined}
                        >
                            <span>{name}</span>
                        </a>
                    </li>
                ))}
            </ul>
    </div>
    <div id="extraContent" class="hidden flex-row items-center pt-10 md:flex md:pt-0 md:flex-row navContent">
        <ArgFlag alt="arg-flag" class:list={'mr-2'} />
        <UpArrow strokeWidth="3" class:list={'hover:scale-110 transition-transform duration-200 cursor-pointer'} />
    </div>
</nav>

<script>
    function initializeMenuToggle() {
        const nav = document.querySelector("#nav");
        const menuButton = document.querySelector("#menuButton");
        const closeButton = document.querySelector("#closeButton");
        const menuMobileContent = document.querySelector("#menuMobileContent");
        const navContent = document.querySelector(".navContent");
        const extraContent = document.querySelector("#extraContent");

        if (!menuButton || !closeButton || !menuMobileContent || !nav || !navContent || !extraContent) {
            console.error("One or more elements are missing:", {
                menuButton,
                closeButton,
                menuMobileContent,
                nav,
                navContent,
                extraContent
            });
            return;
        }

        const toggleMenu = () => {
            menuButton.classList.toggle("hidden");
            closeButton.classList.toggle("hidden");

            menuMobileContent.classList.toggle("hidden");
            menuMobileContent.classList.toggle("flex");

            extraContent.classList.toggle("hidden");
            extraContent.classList.toggle("flex");

            nav.classList.toggle("h-screen");
            nav.classList.toggle("bg-black/75");
            document.body.classList.toggle("overflow-hidden");
        };

        menuButton.addEventListener("click", toggleMenu);
        closeButton.addEventListener("click", toggleMenu);
    }

    function preventReloadOnCurrentPage() {
        const links = document.querySelectorAll("a");

        links.forEach((link) => {
            link.addEventListener("click", (event) => {
                const currentPath = window.location.pathname;
                const targetPath = link.getAttribute("href");

                if (currentPath === targetPath) {
                    event.preventDefault();
                    console.log(`You are already in ${currentPath}, the page does not reload.`);
                }
            });
        });
    }

    document.addEventListener("DOMContentLoaded", () => {
        initializeMenuToggle();
        preventReloadOnCurrentPage();
    });
</script>